package co.org.conte.sgm.entity.activiti;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * ActRuExecution generated by hbm2java
 */
@Entity
@Table(name="ACT_RU_EXECUTION"
    ,catalog="alfresco"
    , uniqueConstraints = @UniqueConstraint(columnNames={"PROC_DEF_ID_", "BUSINESS_KEY_"}) 
)
public class ActRuExecution  implements java.io.Serializable {


     private String id;
     private ActRuExecution actRuExecutionByParentId;
     private ActRuExecution actRuExecutionBySuperExec;
     private ActRuExecution actRuExecutionByProcInstId;
     private Integer rev;
     private String businessKey;
     private String procDefId;
     private String actId;
     private Byte isActive;
     private Byte isConcurrent;
     private Byte isScope;
    // private Set<ActRuTask> actRuTasksForProcInstId = new HashSet<ActRuTask>(0);
     /*
     private Set actRuVariablesForProcInstId = new HashSet(0);
     private Set actRuVariablesForExecutionId = new HashSet(0);
     private Set actRuExecutionsForProcInstId = new HashSet(0);
     private Set actRuExecutionsForSuperExec = new HashSet(0);
     private Set actRuExecutionsForParentId = new HashSet(0);
     
     private Set actRuTasksForExecutionId = new HashSet(0);
     */     
     
    public ActRuExecution() {
    }

	
    public ActRuExecution(String id) {
        this.id = id;
    }
    public ActRuExecution(String id, ActRuExecution actRuExecutionByParentId, ActRuExecution actRuExecutionBySuperExec, ActRuExecution actRuExecutionByProcInstId, Integer rev, String businessKey, String procDefId, String actId, Byte isActive, Byte isConcurrent, Byte isScope 
            /*Set actRuVariablesForProcInstId, Set actRuVariablesForExecutionId, Set actRuExecutionsForProcInstId, Set actRuExecutionsForSuperExec, Set actRuExecutionsForParentId, Set actRuTasksForProcInstId, Set actRuTasksForExecutionId
            */) {
       this.id = id;
       this.actRuExecutionByParentId = actRuExecutionByParentId;
       this.actRuExecutionBySuperExec = actRuExecutionBySuperExec;
       this.actRuExecutionByProcInstId = actRuExecutionByProcInstId;
       this.rev = rev;
       this.businessKey = businessKey;
       this.procDefId = procDefId;
       this.actId = actId;
       this.isActive = isActive;
       this.isConcurrent = isConcurrent;
       this.isScope = isScope;
       /*
       this.actRuVariablesForProcInstId = actRuVariablesForProcInstId;
       this.actRuVariablesForExecutionId = actRuVariablesForExecutionId;
       this.actRuExecutionsForProcInstId = actRuExecutionsForProcInstId;
       this.actRuExecutionsForSuperExec = actRuExecutionsForSuperExec;
       this.actRuExecutionsForParentId = actRuExecutionsForParentId;
       this.actRuTasksForProcInstId = actRuTasksForProcInstId;
       this.actRuTasksForExecutionId = actRuTasksForExecutionId;
       */
    }
   
     @Id 
    
    @Column(name="ID_", unique=true, nullable=false, length=64)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_ID_")
    public ActRuExecution getActRuExecutionByParentId() {
        return this.actRuExecutionByParentId;
    }
    
    public void setActRuExecutionByParentId(ActRuExecution actRuExecutionByParentId) {
        this.actRuExecutionByParentId = actRuExecutionByParentId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SUPER_EXEC_")
    public ActRuExecution getActRuExecutionBySuperExec() {
        return this.actRuExecutionBySuperExec;
    }
    
    public void setActRuExecutionBySuperExec(ActRuExecution actRuExecutionBySuperExec) {
        this.actRuExecutionBySuperExec = actRuExecutionBySuperExec;
    }
    /**
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PROC_INST_ID_")
    public ActRuExecution getActRuExecutionByProcInstId() {
        return this.actRuExecutionByProcInstId;
    }
    
    public void setActRuExecutionByProcInstId(ActRuExecution actRuExecutionByProcInstId) {
        this.actRuExecutionByProcInstId = actRuExecutionByProcInstId;
    }
    */
    @Column(name="REV_")
    public Integer getRev() {
        return this.rev;
    }
    
    public void setRev(Integer rev) {
        this.rev = rev;
    }
    
    @Column(name="BUSINESS_KEY_")
    public String getBusinessKey() {
        return this.businessKey;
    }
    
    public void setBusinessKey(String businessKey) {
        this.businessKey = businessKey;
    }
    
    @Column(name="PROC_DEF_ID_", length=64)
    public String getProcDefId() {
        return this.procDefId;
    }
    
    public void setProcDefId(String procDefId) {
        this.procDefId = procDefId;
    }
    
    @Column(name="ACT_ID_")
    public String getActId() {
        return this.actId;
    }
    
    public void setActId(String actId) {
        this.actId = actId;
    }
    
    @Column(name="IS_ACTIVE_")
    public Byte getIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(Byte isActive) {
        this.isActive = isActive;
    }
    
    @Column(name="IS_CONCURRENT_")
    public Byte getIsConcurrent() {
        return this.isConcurrent;
    }
    
    public void setIsConcurrent(Byte isConcurrent) {
        this.isConcurrent = isConcurrent;
    }
    
    @Column(name="IS_SCOPE_")
    public Byte getIsScope() {
        return this.isScope;
    }
    
    public void setIsScope(Byte isScope) {
        this.isScope = isScope;
    }
    
    /*
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="actRuExecutionByProcInstId")
    public Set getActRuVariablesForProcInstId() {
        return this.actRuVariablesForProcInstId;
    }
    
    public void setActRuVariablesForProcInstId(Set actRuVariablesForProcInstId) {
        this.actRuVariablesForProcInstId = actRuVariablesForProcInstId;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="actRuExecutionByExecutionId")
    public Set getActRuVariablesForExecutionId() {
        return this.actRuVariablesForExecutionId;
    }
    
    public void setActRuVariablesForExecutionId(Set actRuVariablesForExecutionId) {
        this.actRuVariablesForExecutionId = actRuVariablesForExecutionId;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="actRuExecutionByProcInstId")
    public Set getActRuExecutionsForProcInstId() {
        return this.actRuExecutionsForProcInstId;
    }
    
    public void setActRuExecutionsForProcInstId(Set actRuExecutionsForProcInstId) {
        this.actRuExecutionsForProcInstId = actRuExecutionsForProcInstId;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="actRuExecutionBySuperExec")
    public Set getActRuExecutionsForSuperExec() {
        return this.actRuExecutionsForSuperExec;
    }
    
    public void setActRuExecutionsForSuperExec(Set actRuExecutionsForSuperExec) {
        this.actRuExecutionsForSuperExec = actRuExecutionsForSuperExec;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="actRuExecutionByParentId")
    public Set getActRuExecutionsForParentId() {
        return this.actRuExecutionsForParentId;
    }
    
    public void setActRuExecutionsForParentId(Set actRuExecutionsForParentId) {
        this.actRuExecutionsForParentId = actRuExecutionsForParentId;
    }

@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="actRuExecutionByExecutionId")
    public Set getActRuTasksForExecutionId() {
        return this.actRuTasksForExecutionId;
    }
    
    public void setActRuTasksForExecutionId(Set actRuTasksForExecutionId) {
        this.actRuTasksForExecutionId = actRuTasksForExecutionId;
    }
    
    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="actRuExecutionByProcInstId")
    public Set getActRuTasksForProcInstId() {
        return this.actRuTasksForProcInstId;
    }
    
    public void setActRuTasksForProcInstId(Set actRuTasksForProcInstId) {
        this.actRuTasksForProcInstId = actRuTasksForProcInstId;
    }
*/


}


