package co.org.conte.sgm.entity;
// Generated 30/10/2012 11:23:25 AM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ActividadGenerica generated by hbm2java
 */
@Entity
@Table(name="actividad_generica")
public class ActividadGenerica extends BaseEntity{


     private int codigo;
     private ClaseGenerica claseGenerica;
     private String nombre;
     private String descripcion;
     private char editable;
     private Set actividadAgregadas = new HashSet(0);
     private Set formatoActividades = new HashSet(0);
     private Set items = new HashSet(0);

    public ActividadGenerica() {
    }

	
    public ActividadGenerica(int codigo, ClaseGenerica claseGenerica, char editable) {
        this.codigo = codigo;
        this.claseGenerica = claseGenerica;
        this.editable = editable;
    }
    public ActividadGenerica(int codigo, ClaseGenerica claseGenerica, String nombre, String descripcion, char editable, Set actividadAgregadas, Set formatoActividades) {
       this.codigo = codigo;
       this.claseGenerica = claseGenerica;
       this.nombre = nombre;
       this.descripcion = descripcion;
       this.editable = editable;
       this.actividadAgregadas = actividadAgregadas;
       this.formatoActividades = formatoActividades;
    }
   
    @Id 
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="codigo", unique=true, nullable=false)
    public int getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(int codigo) {
        this.codigo = codigo;
    }
    
    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="c_clase", nullable=false)
    public ClaseGenerica getClaseGenerica() {
        return this.claseGenerica;
    }
    
    public void setClaseGenerica(ClaseGenerica claseGenerica) {
        this.claseGenerica = claseGenerica;
    }
    
    @Column(name="nombre", length=45)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    
    @Column(name="descripcion", length=45)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
    
    @Column(name="editable", nullable=false, length=1)
    public char getEditable() {
        return this.editable;
    }
    
    public void setEditable(char editable) {
        this.editable = editable;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="actividadGenerica")
    public Set<ActividadAgregada> getActividadAgregadas() {
        return this.actividadAgregadas;
    }
    
    public void setActividadAgregadas(Set actividadAgregadas) {
        this.actividadAgregadas = actividadAgregadas;
    }
    
    @OneToMany(fetch=FetchType.LAZY, mappedBy="actividadGenerica")
    public Set<FormatoActividad> getFormatoActividades() {
        return this.formatoActividades;
    }
    
    public void setformatoActividades(Set formatoActividades) {
        this.formatoActividades = formatoActividades;
    }
    
    @ManyToMany(cascade=CascadeType.PERSIST, fetch=FetchType.EAGER)
    @JoinTable(name="activity_item", 
            joinColumns = { 
                @JoinColumn(name="activity_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
                    @JoinColumn(name="item_id", nullable=false, updatable=false) })
    public Set<Item> getItems() {
        return this.items;
    }
    
    public void setItems(Set items) {
        this.items = items;
    }

    @Override
    public String toString() {
        return this.getDescripcion();
    }

    @Override
    public boolean equals(Object other) {
         if ( (this == other ) ) {
             return true;
         }
         if ( (other == null ) ) {
             return false;
         }
         if ( !(other instanceof ActividadGenerica) ) {
             return false;
         } else {
             ActividadGenerica castOther = ( ActividadGenerica ) other;
             return (this.getCodigo() == castOther.getCodigo()) ? true : false;
         } 
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 59 * hash + this.codigo;
        return hash;
    }
    
    
    
    
}


