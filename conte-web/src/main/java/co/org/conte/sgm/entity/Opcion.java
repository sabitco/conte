package co.org.conte.sgm.entity;
// Generated 16/01/2013 09:34:55 AM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Opcion generated by hbm2java
 */
@Entity
@Table(name="opcion")
public class Opcion  implements java.io.Serializable {
    
    private int codigo;
    private String descripcion;
    private Set<Pregunta> preguntas = new HashSet(0);
    private Set<Respuesta> respuestas = new HashSet(0);
    
    public Opcion() {
        
    }

	
    public Opcion(int codigo, String descripcion) {
        this.codigo = codigo;
        this.descripcion = descripcion;
    }
    
    public Opcion(int codigo, String descripcion, Set preguntas) {
        this.codigo = codigo;
        this.descripcion = descripcion;
        this.preguntas = preguntas;
    }
    
    @Id     
    @Column(name="codigo", unique=true, nullable=false)
    public int getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(int codigo) {
        this.codigo = codigo;
    }
    
    @Column(name="descripcion", nullable=false)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
    
    @ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="pregunta_opcion", catalog="sgm_conte_test", joinColumns = { 
        @JoinColumn(name="c_opcion", nullable=false, updatable=false) }, inverseJoinColumns = { 
            @JoinColumn(name="c_pregunta", nullable=false, updatable=false) })
    public Set<Pregunta> getPreguntas() {
        return this.preguntas;
    }
    
    public void setPreguntas(Set<Pregunta> preguntas) {
        this.preguntas = preguntas;
    }
    
    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcion")
    public Set<Respuesta> getRespuestas() {
        return this.respuestas;
    }
    
    public void setRespuestas(Set respuestas) {
        this.respuestas = respuestas;
    }

}