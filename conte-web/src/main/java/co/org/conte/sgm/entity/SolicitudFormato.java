package co.org.conte.sgm.entity;
// Generated 12/10/2012 02:34:21 PM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SolicitudFormato generated by hbm2java
 */
@Entity
@Table(name="solicitud_formato")
public class SolicitudFormato  implements java.io.Serializable {


     private SolicitudFormatoId id;
     private Usuario usuario;
     private FormatoEstudio formatoEstudio;
     private Solicitud solicitud;
     private Date fechaEvaluacion;
     private String observaciones;

    public SolicitudFormato() {
    }

	
    public SolicitudFormato(SolicitudFormatoId id, Usuario usuario, FormatoEstudio formatoEstudio, Solicitud solicitud) {
        this.id = id;
        this.usuario = usuario;
        this.formatoEstudio = formatoEstudio;
        this.solicitud = solicitud;
    }
    public SolicitudFormato(SolicitudFormatoId id, Usuario usuario, FormatoEstudio formatoEstudio, Solicitud solicitud, Date fechaEvaluacion, String observaciones) {
       this.id = id;
       this.usuario = usuario;
       this.formatoEstudio = formatoEstudio;
       this.solicitud = solicitud;
       this.fechaEvaluacion = fechaEvaluacion;
       this.observaciones = observaciones;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="CSolicitud", column=@Column(name="c_solicitud", nullable=false) ), 
        @AttributeOverride(name="CFormato", column=@Column(name="c_formato", nullable=false) ) } )
    public SolicitudFormatoId getId() {
        return this.id;
    }
    
    public void setId(SolicitudFormatoId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="c_consejero", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="c_formato", nullable=false, insertable=false, updatable=false)
    public FormatoEstudio getFormatoEstudio() {
        return this.formatoEstudio;
    }
    
    public void setFormatoEstudio(FormatoEstudio formatoEstudio) {
        this.formatoEstudio = formatoEstudio;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="c_solicitud", nullable=false, insertable=false, updatable=false)
    public Solicitud getSolicitud() {
        return this.solicitud;
    }
    
    public void setSolicitud(Solicitud solicitud) {
        this.solicitud = solicitud;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_evaluacion", length=19)
    public Date getFechaEvaluacion() {
        return this.fechaEvaluacion;
    }
    
    public void setFechaEvaluacion(Date fechaEvaluacion) {
        this.fechaEvaluacion = fechaEvaluacion;
    }
    
    @Column(name="observaciones", length=45)
    public String getObservaciones() {
        return this.observaciones;
    }
    
    public void setObservaciones(String observaciones) {
        this.observaciones = observaciones;
    }




}


