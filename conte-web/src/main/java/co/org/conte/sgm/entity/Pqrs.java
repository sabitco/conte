package co.org.conte.sgm.entity;
// Generated 12/10/2012 02:34:21 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Pqrs generated by hbm2java
 */
@Entity
@Table(name="pqrs")
public class Pqrs  implements java.io.Serializable {


     private int consecutivo;
     private Ciudad ciudad;
     private Usuario usuario;
     private TipoDocumento tipoDocumento;
     private String documento;     
     private String nombres;
     private String apellidos;
     private String direccion;
     private String email;
     private String telefono;
     private String celular;
     private String solicitud;
     private Integer estado;
     private Integer medio;
     private Character tipo;
     private Set encuestaSatisfaccions = new HashSet(0);
     private Set logPqrses = new HashSet(0);
     private Set<PqrsDescripcion> pqrsDescripciones = new HashSet<PqrsDescripcion>(0);

    public Pqrs() {
    }

	
    public Pqrs(int consecutivo) {
        this.consecutivo = consecutivo;
    }
    public Pqrs(int consecutivo, Ciudad ciudad, Usuario usuario, String nombres, String apellidos, String direccion, String email, String telefono, String celular, String solicitud, Integer estado, Integer medio, Character tipo, Set encuestaSatisfaccions, Set logPqrses) {
       this.consecutivo = consecutivo;
       this.ciudad = ciudad;
       this.usuario = usuario;
       this.nombres = nombres;
       this.apellidos = apellidos;
       this.direccion = direccion;
       this.email = email;
       this.telefono = telefono;
       this.celular = celular;
       this.solicitud = solicitud;
       this.estado = estado;
       this.medio = medio;
       this.tipo = tipo;
       this.encuestaSatisfaccions = encuestaSatisfaccions;
       this.logPqrses = logPqrses;
    }
   
    @Id 
    @GeneratedValue(strategy=GenerationType.IDENTITY) 
    @Column(name="consecutivo", unique=true, nullable=false)
    public int getConsecutivo() {
        return this.consecutivo;
    }
    
    public void setConsecutivo(int consecutivo) {
        this.consecutivo = consecutivo;
    }
    
    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="c_ciudad")
    public Ciudad getCiudad() {
        return this.ciudad;
    }
    
    public void setCiudad(Ciudad ciudad) {
        this.ciudad = ciudad;
    }
    
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="c_responsable")
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="c_tipo_documento")
    public TipoDocumento getTipoDocumento() {
        return tipoDocumento;
    }

    public void setTipoDocumento(TipoDocumento tipoDocumento) {
        this.tipoDocumento = tipoDocumento;
    }

    @Column(name="documento", length=20)
    public String getDocumento() {
        return documento;
    }

    public void setDocumento(String documento) {
        this.documento = documento;
    }
    
    @Column(name="nombres", length=45)
    public String getNombres() {
        return this.nombres;
    }
    
    public void setNombres(String nombres) {
        this.nombres = nombres;
    }
    
    @Column(name="apellidos", length=45)
    public String getApellidos() {
        return this.apellidos;
    }
    
    public void setApellidos(String apellidos) {
        this.apellidos = apellidos;
    }
    
    @Column(name="direccion", length=45)
    public String getDireccion() {
        return this.direccion;
    }
    
    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }
    
    @Column(name="email", length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    
    @Column(name="telefono", length=20)
    public String getTelefono() {
        return this.telefono;
    }
    
    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }
    
    @Column(name="celular", length=20)
    public String getCelular() {
        return this.celular;
    }
    
    public void setCelular(String celular) {
        this.celular = celular;
    }
    
    @Column(name="solicitud", length=200)
    public String getSolicitud() {
        return this.solicitud;
    }
    
    public void setSolicitud(String solicitud) {
        this.solicitud = solicitud;
    }
    
    @Column(name="estado")
    public Integer getEstado() {
        return this.estado;
    }
    
    public void setEstado(Integer estado) {
        this.estado = estado;
    }
    
    @Column(name="medio")
    public Integer getMedio() {
        return this.medio;
    }
    
    public void setMedio(Integer medio) {
        this.medio = medio;
    }
    
    @Column(name="tipo", length=1)
    public Character getTipo() {
        return this.tipo;
    }
    
    public void setTipo(Character tipo) {
        this.tipo = tipo;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="pqrs")
    public Set<EncuestaSatisfaccion> getEncuestaSatisfaccions() {
        return this.encuestaSatisfaccions;
    }
    
    public void setEncuestaSatisfaccions(Set encuestaSatisfaccions) {
        this.encuestaSatisfaccions = encuestaSatisfaccions;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="pqrs")
    public Set<LogPqrs> getLogPqrses() {
        return this.logPqrses;
    }
    
    public void setLogPqrses(Set logPqrses) {
        this.logPqrses = logPqrses;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="pqrs")
    public Set<PqrsDescripcion> getPqrsDescripciones() {
        return this.pqrsDescripciones;
    }
    
    public void setPqrsDescripciones(Set<PqrsDescripcion> pqrsDescripciones) {
        this.pqrsDescripciones = pqrsDescripciones;
    }
}